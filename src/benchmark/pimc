"""
BenchmarkTools.Trial: 4 samples with 1 evaluation.
 Range (min … max):  1.356 s …    1.685 s  ┊ GC (min … max): 3.50% … 3.59%
 Time  (median):     1.393 s               ┊ GC (median):    3.91%
 Time  (mean ± σ):   1.457 s ± 153.163 ms  ┊ GC (mean ± σ):  3.72% ± 0.22%

  █   █  █                                                 █  
  █▁▁▁█▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█ ▁
  1.36 s         Histogram: frequency by time         1.68 s <

 Memory estimate: 579.89 MiB, allocs estimate: 17336010.
"""

"""
julia> @benchmark MonteCarlo_move!(1,Particle)
BenchmarkTools.Trial: 1254 samples with 1 evaluation.
 Range (min … max):  3.328 ms … 11.013 ms  ┊ GC (min … max):  0.00% … 59.60%
 Time  (median):     3.472 ms              ┊ GC (median):     0.00%
 Time  (mean ± σ):   3.984 ms ±  1.585 ms  ┊ GC (mean ± σ):  10.09% ± 15.34%

  █▇▄▄▄▅                                                      
  ██████▅▄▅▅▁▁▄▁▁▄▁▄▁▁▁▁▁▁▁▁▁▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▄▆▇█▇█▇▅▆▆ █
  3.33 ms      Histogram: log(frequency) by time     10.3 ms <

 Memory estimate: 3.52 MiB, allocs estimate: 128016.

julia> @benchmark for time_slices in 1:Particle.Timeslices
           Bisection_Move!(2,time_slices,Particle)
       end
BenchmarkTools.Trial: 10000 samples with 1 evaluation.
 Range (min … max):  412.293 μs …  10.665 ms  ┊ GC (min … max): 0.00% … 91.57%
 Time  (median):     436.373 μs               ┊ GC (median):    0.00%
 Time  (mean ± σ):   485.643 μs ± 279.538 μs  ┊ GC (mean ± σ):  1.86% ±  3.33%

  ▆███▆▄▄▃▃▃▃▂▂▂▂▂▁▂▂▄▅▃▃▂▁▂▁▁                                  ▂
  ███████████████████████████████▇█▇█▇█▇▇██▇▇▆▇▇█▇▇▇▇▅▅▆▆▆▅▅▆▆▃ █
  412 μs        Histogram: log(frequency) by time        826 μs <

 Memory estimate: 70.03 KiB, allocs estimate: 897.

julia> @benchmark Worm_move!(1)
BenchmarkTools.Trial: 10000 samples with 836 evaluations.
 Range (min … max):  138.874 ns … 321.341 ns  ┊ GC (min … max): 0.00% … 0.00%
 Time  (median):     143.309 ns               ┊ GC (median):    0.00%
 Time  (mean ± σ):   146.135 ns ±  14.862 ns  ┊ GC (mean ± σ):  0.00% ± 0.00%

  ▄ ▆█▂▂▃                                                       ▁
  ███████▇█▇▅▆█▇▆█▇▆▇▇▇▆▇▅▅▃▇▅▅▅▆▇▇▆▆▆▅▄▃▅▇▅▄▅▅▅▅▄▄▅▄▄▃▁▃▁▄▄▄▄▄ █
  139 ns        Histogram: log(frequency) by time        223 ns <

 Memory estimate: 0 bytes, allocs estimate: 0.
 """




 """
BenchmarkTools.Trial: 46 samples with 1 evaluation.
 Range (min … max):  100.242 ms … 117.168 ms  ┊ GC (min … max): 0.00% … 0.00%
 Time  (median):     109.986 ms               ┊ GC (median):    7.61%
 Time  (mean ± σ):   109.753 ms ±   3.300 ms  ┊ GC (mean ± σ):  6.85% ± 2.41%

                                ▅ █▂█▂▂   ▂▅                     
  █▅▁▁▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁███████▅████▅▅▁▁▁▁▅▁▁▁▁▁▁▁▅▁▁▁▅ ▁
  100 ms           Histogram: frequency by time          117 ms <

 Memory estimate: 66.75 MiB, allocs estimate: 3023100.

BenchmarkTools.Trial: 1 sample with 1 evaluation.
 Single result which took 17.605 s (5.99% GC) to evaluate,
 with a memory estimate of 8.29 GiB, over 385318500 allocations.
"""
@benchmark for i in 1:100
        # for particle_type in 1:size(Particle.Type)[1]
        # @benchmark MonteCarlo_move!(1,Particle)
        # @benchmark MonteCarlo_move!(2,Particle)
            for time_slices in 1:Particle.Timeslices
                # Worm_move!(1)
                # if time_slices == 1
                    MonteCarlo_move!(2,Particle)
                # else
                    # Bisection_Move!(2,time_slices,Particle)
                    # MonteCarlo_Rotation_move!(2,Particle)
                # end
            end

        end

"""
BenchmarkTools.Trial: 1 sample with 1 evaluation.
 Single result which took 17.605 s (5.99% GC) to evaluate,
 with a memory estimate of 8.29 GiB, over 385318500 allocations.
"""
@benchmark for i in 1:100
        # for particle_type in 1:size(Particle.Type)[1]
        # @benchmark MonteCarlo_move!(1,Particle)
        # @benchmark MonteCarlo_move!(2,Particle)
            for time_slices in 1:Particle.Timeslices
                # Worm_move!(1)
                # if time_slices == 1
                    MonteCarlo_move!(1,Particle)
                # else
                    # Bisection_Move!(2,time_slices,Particle)
                    # MonteCarlo_Rotation_move!(2,Particle)
                # end
            end

        end